
" ==> Extends

Plugin 'godlygeek/tabular'

" --> smooth scroll
Plugin 'terryma/vim-smooth-scroll'
noremap <silent> <c-u> :call smooth_scroll#up(&scroll, 12, 2)<cr>
noremap <silent> <c-d> :call smooth_scroll#down(&scroll, 14, 2)<cr>
noremap <silent> <c-b> :call smooth_scroll#up(&scroll*2, 22, 4)<cr>
noremap <silent> <c-f> :call smooth_scroll#down(&scroll*2, 24, 4)<cr>

" extended % matching for HTML, LaTeX, and many other languages
Plugin 'vim-scripts/matchit.zip'

" Write styles faster. Much faster.
" Plugin 'rstacruz/vim-hyperstyle'

" {{{{ emmet
" default keymap is `<C-Y>,` (not <leader>, just comma `,')
Plugin 'mattn/emmet-vim'
let g:user_emmet_mode='inv'

Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-repeat'

" --> Git support
Plugin 'airblade/vim-gitgutter'

" --> 快速搜索插件
" An ack.vim alternative mimics Ctrl-Shift-F on Sublime Text 2
" require ag(a.k.a `the_silver_searcher`) or ack
Plugin 'dyng/ctrlsf.vim'
let g:ctrlsf_winsize='30%'
let g:ctrlsf_auto_close=0
nmap     <C-F>f <Plug>CtrlSFPrompt
vmap     <C-F>f <Plug>CtrlSFVwordPath
vmap     <C-F>F <Plug>CtrlSFVwordExec
nmap     <C-F>n <Plug>CtrlSFCwordPath
nmap     <C-F>p <Plug>CtrlSFPwordPath
nnoremap <C-F>o :CtrlSFOpen<CR>
" In CtrlSF window:
" Enter - Open corresponding file of current line in the window which CtrlSF is launched from.
" t - Like Enter but open file in a new tab.
" p - Like Enter but open file in a preview window.
" O - Like Enter but always leave CtrlSF window opening.
" T - Lkie t but focus CtrlSF window instead of new opened tab.
" q - Quit CtrlSF window.
" <C-J> - Move cursor to next match.
" <C-K> - Move cursor to previous match.
" In preview window:
" q - Close preview window.

" {{{ NERDTree插件的快捷键
Plugin 'scrooloose/nerdtree'
" o.......打开文件目录或书签
" t.......在新的tab页中打开文件或书签
" i.......在split window中打开选择的文件
" s.......在vsplit window中打开选择的文件
" O.......Recursively open the selected directory
" x.......Close the current nodes parent
" X.......Recursively close all children of the current node
" e.......Edit the current dir
" D.......删除当前书签
" P.......返回根节点
" p.......返回当前节点父节点
" C.......进入相应目录
" u.......返回上一级目录
" cd......Change the CWD to the dir of the selected node
" CD......Change tree root to the CWD
" I.......切换隐藏文件是否显示
" B.......切换书签隐藏显示
" }}}
" {{{ NERDTreeTabsToggle
Plugin 'jistr/vim-nerdtree-tabs'
" 始终焦点位于文件窗口内
let g:nerdtree_tabs_smart_startup_focus=2
" 默认不显示NERDTree窗口
let g:nerdtree_tabs_open_on_gui_startup=0
nmap <leader>nt :NERDTreeTabsToggle<CR>
" }}}

" {{{ plugin – NERD_commenter.vim   注释代码用的
Plugin 'scrooloose/nerdcommenter'
" 让注释符与语句之间留一个空格
let g:NERDSpaceDelims=1
" 多行注释时样子更好看
let g:NERDCompactSexyComs=1
" }}}

Plugin 'terryma/vim-expand-region'
vmap v <Plug>(expand_region_expand)
vmap <C-v> <Plug>(expand_region_shrink)

" 鼠标多重选择
Plugin 'terryma/vim-multiple-cursors'

" 搜索替换快速预览
Plugin 'osyo-manga/vim-over'

" 快速到达指定位置插件
Plugin 'Lokaltog/vim-easymotion'
let g:EasyMotion_startofline = 0 " keep cursor colum when JK motion
" With this option set, v will match both v and V, but V will match V only. Default: 0.
let g:EasyMotion_smartcase = 1
" use / map to easymontion's global search
map / <Plug>(easymotion-sn)
omap / <Plug>(easymotion-tn)
nmap s <Plug>(easymotion-s2)

" Plugin 'justinmk/vim-sneak'
" Plugin 'haya14busa/incsearch.vim'
